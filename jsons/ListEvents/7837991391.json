{
  "actor": {
    "avatar_url": "https://avatars.githubusercontent.com/u/183678?",
    "gravatar_id": "",
    "id": 183678,
    "login": "Seldaek",
    "url": "https://api.github.com/users/Seldaek"
  },
  "created_at": "2018-06-18T08:41:25Z",
  "id": "7837991391",
  "payload": {
    "action": "created",
    "comment": {
      "author_association": "OWNER",
      "body": "I'm not entirely sure what you suggest we do here? Perhaps we could filter out the arguments from the stacktrace in the NormalizerFormatter?",
      "created_at": "2018-06-18T08:41:25Z",
      "html_url": "https://github.com/Seldaek/monolog/issues/1138#issuecomment-397982946",
      "id": 397982946,
      "issue_url": "https://api.github.com/repos/Seldaek/monolog/issues/1138",
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzk4Mjk0Ng==",
      "updated_at": "2018-06-18T08:41:25Z",
      "url": "https://api.github.com/repos/Seldaek/monolog/issues/comments/397982946",
      "user": {
        "avatar_url": "https://avatars1.githubusercontent.com/u/183678?v=4",
        "events_url": "https://api.github.com/users/Seldaek/events{/privacy}",
        "followers_url": "https://api.github.com/users/Seldaek/followers",
        "following_url": "https://api.github.com/users/Seldaek/following{/other_user}",
        "gists_url": "https://api.github.com/users/Seldaek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Seldaek",
        "id": 183678,
        "login": "Seldaek",
        "node_id": "MDQ6VXNlcjE4MzY3OA==",
        "organizations_url": "https://api.github.com/users/Seldaek/orgs",
        "received_events_url": "https://api.github.com/users/Seldaek/received_events",
        "repos_url": "https://api.github.com/users/Seldaek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Seldaek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Seldaek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Seldaek"
      }
    },
    "issue": {
      "assignee": null,
      "assignees": [],
      "author_association": "NONE",
      "body": "There's a scenario where I have a callable, which is called via `call_user_func()`, which gets the Symfony Request object as argument. Due to this being a function call, the arguments are exposed in the stacktrace. This is something that PHP does, so we can't modify this.\r\n\r\n```php\r\n// snippet from my testcase\r\nclass TestFoo extends TestCase\r\n{\r\n    public function onSuccess(Request $request)\r\n    {\r\n        throw new \\LogicException('test');\r\n    }\r\n\r\n    public function testFormatBatch()\r\n    {\r\n        $args = [$request = Request::create('/tests', 'POST', ['passwird' =\u003e 'henk123!'])];\r\n        $f = [$this, 'onSuccess'];\r\n\r\n        $exception_callable = null;\r\n\r\n        try {\r\n            $f(...$args);\r\n        } catch (\\LogicException $e) {\r\n            $exception_callable = $e;\r\n        }\r\n\r\n        $exception_call_user_func = null;\r\n\r\n        try {\r\n            call_user_func($f, ...$args);\r\n        } catch (\\LogicException $e) {\r\n            $exception_call_user_func = $e;\r\n        }\r\n        // ... more\r\n    }\r\n}\r\n```\r\n\r\nIn this example, the only difference is the way the exception is called, but this results in a slightly different stacktrace. The stacktraces from my output in the HTML formatter:\r\n\r\n##### `call_user_func($f, ...$args)`\r\n```\r\n{\r\n    \"class\": \"LogicException\",\r\n    \"message\": \"test\",\r\n    \"code\": 0,\r\n    \"file\": \"/home/ivanderberg/projects/logging-bundle/test/Component/Logging/ContainerAwareHtmlFormatterTest.php:86\",\r\n    \"trace\": [\r\n        \"{\\\"function\\\":\\\"onSuccess\\\",\\\"class\\\":\\\"Hostnet\\\\\\\\Component\\\\\\\\Logging\\\\\\\\ContainerAwareHtmlFormatterTest\\\",\\\"type\\\":\\\"-\u003e\\\",\\\"args\\\":[\\\"[object] (Symfony\\\\\\\\Component\\\\\\\\HttpFoundation\\\\\\\\Request: POST /tests HTTP/1.1\\\\r\\\\nAccept:          text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\\\\r\\\\nAccept-Charset:  ISO-8859-1,utf-8;q=0.7,*;q=0.7\\\\r\\\\nAccept-Language: en-us,en;q=0.5\\\\r\\\\nContent-Type:    application/x-www-form-urlencoded\\\\r\\\\nHost:            localhost\\\\r\\\\nUser-Agent:      Symfony\\\\r\\\\n\\\\r\\\\n)\\\"]}\",\r\n        \"/home/ivanderberg/projects/logging-bundle/test/Component/Logging/ContainerAwareHtmlFormatterTest.php:105\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:1143\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:840\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestResult.php:645\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:798\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestSuite.php:776\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestSuite.php:776\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/TestRunner.php:529\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/Command.php:198\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/Command.php:151\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/phpunit:53\"\r\n    ]\r\n}\r\n```\r\n\r\n##### `$f(...$args)`\r\n```\r\n{\r\n    \"class\": \"LogicException\",\r\n    \"message\": \"test\",\r\n    \"code\": 0,\r\n    \"file\": \"/home/ivanderberg/projects/logging-bundle/test/Component/Logging/ContainerAwareHtmlFormatterTest.php:86\",\r\n    \"trace\": [\r\n        \"/home/ivanderberg/projects/logging-bundle/test/Component/Logging/ContainerAwareHtmlFormatterTest.php:97\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:1143\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:840\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestResult.php:645\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestCase.php:798\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestSuite.php:776\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/Framework/TestSuite.php:776\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/TestRunner.php:529\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/Command.php:198\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/src/TextUI/Command.php:151\",\r\n        \"/home/ivanderberg/projects/logging-bundle/vendor/phpunit/phpunit/phpunit:53\"\r\n    ]\r\n}\r\n```\r\n\r\nAs you can see, it calls the `__toString` of the Symfony request, which outputs some information: https://github.com/symfony/http-foundation/blob/63d41b663b753dac65f6e41e9e02beff5e33dd41/Request.php#L493-L517\r\n\r\nIf the Request object contains some post information like passwords, this is now being added due to the stacktrace containing a function call argument for the Request. The code that causes this: https://github.com/Seldaek/monolog/blob/7b992836275e09ed63c63fe33ca9993e515e6c5d/src/Monolog/Formatter/NormalizerFormatter.php#L101-L121\r\n\r\nIt's debatable whether or not this is a Symfony issue or an issue in the formatter, but I'm uncomfortable with calling the `__toString` on an object that might contain sensitive data from a vendor that I cannot influence. ",
      "closed_at": null,
      "comments": 0,
      "comments_url": "https://api.github.com/repos/Seldaek/monolog/issues/1138/comments",
      "created_at": "2018-04-11T08:34:36Z",
      "events_url": "https://api.github.com/repos/Seldaek/monolog/issues/1138/events",
      "html_url": "https://github.com/Seldaek/monolog/issues/1138",
      "id": 313223875,
      "labels": [],
      "labels_url": "https://api.github.com/repos/Seldaek/monolog/issues/1138/labels{/name}",
      "locked": false,
      "milestone": null,
      "node_id": "MDU6SXNzdWUzMTMyMjM4NzU=",
      "number": 1138,
      "repository_url": "https://api.github.com/repos/Seldaek/monolog",
      "state": "open",
      "title": "Sensitive data being exposed via __toString in NormalizerFormatter",
      "updated_at": "2018-06-18T08:41:25Z",
      "url": "https://api.github.com/repos/Seldaek/monolog/issues/1138",
      "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/1754678?v=4",
        "events_url": "https://api.github.com/users/iltar/events{/privacy}",
        "followers_url": "https://api.github.com/users/iltar/followers",
        "following_url": "https://api.github.com/users/iltar/following{/other_user}",
        "gists_url": "https://api.github.com/users/iltar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iltar",
        "id": 1754678,
        "login": "iltar",
        "node_id": "MDQ6VXNlcjE3NTQ2Nzg=",
        "organizations_url": "https://api.github.com/users/iltar/orgs",
        "received_events_url": "https://api.github.com/users/iltar/received_events",
        "repos_url": "https://api.github.com/users/iltar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iltar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iltar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iltar"
      }
    }
  },
  "public": true,
  "repo": {
    "id": 1376664,
    "name": "Seldaek/monolog",
    "url": "https://api.github.com/repos/Seldaek/monolog"
  },
  "type": "IssueCommentEvent"
}